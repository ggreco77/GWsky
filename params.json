{"name":"Gwsky","tagline":"","body":"# GWsky:  tailing the skymap in fields of view.\r\n \r\n                             video tutorial: https://vimeo.com/149301895\r\nThe interactive script GWsky (v2) defines a sequence of Fields of View (FoV) centers from a fixed position over the sky. North/South/East/West directions are allowed. The results are displayed in Aladin Sky Atlas (http://aladin.u-strasbg.fr/) using the |SAMPIntegratedClient| class. The airmass at the FoV center and the integrated probability (%)\r\nare provided during the FoV sequence.\r\n    \r\n    The FoV sequence is generated along the coordinate grid; no roll angle is provided in this  release.\r\nThe FoV centers were evenly space assuming that the shortest angular distance between two points on the celestial sphere is measured along a great circle that passes through both of them:\r\n\r\n                            cosθ=sinδ1sinδ2+cosδ1cosδ2cos(α1−α2), \r\nwhere (α1,δ1) and (α2,δ2) are the right ascension and declination of the two points on the sky (expressed in degrees, then converted to radians).\r\n\r\nThe Fig. below shows a FoV sequence that covers a skymap region in which 50% of probability is contains (red dots).\r\n\r\n![gwsky_fov](https://cloud.githubusercontent.com/assets/11920251/11462523/da085a7a-9715-11e5-959a-5a89076b1e1e.jpg)\r\n\r\n**Running it**\r\n\r\n    from idle:  \r\n              >>> import GWsky \r\n              >>> GWsky.main() \r\n    \r\n    from terminal: ./GWsky\r\n    if ./GWsky: Permission denied; type: chmod u+x GWsky\r\n\r\n\r\n**Input Parameters:**\r\n\r\n\r\n    sky_map : str \r\n    LVC probability skymap in healpix format\r\n\r\n    percentage : float\r\n    probability percentage to determine the area (in square degrees) confined in it\r\n\r\n    FOV_base   : float\r\n    FOV_height : float\r\n    size of Field-of-View Instrument in degrees\r\n\r\n    time_input : str\r\n    the time in the format \"2012-7-12 23:00:00\"\r\n\r\n    lat_input : float\r\n    Geodetic coordinates of the Observatory: latitude (deg)\r\n\r\n    lon_input : float\r\n    Geodetic coordinates of the Observatory: longitude (deg)\r\n\r\n    height_input : float\r\n    Geodetic coordinates of the Observatory: altitude (m)\r\n\r\n    ra : float\r\n    right ascention of FoV center (deg)\r\n\r\n    dec : float\r\n    declination of FoV center (deg)\r\n\r\n\r\n**Return:**\r\n\r\n    area_probability : float\r\n    the area (in square degrees) confined in a given probability percentage\r\n\r\n    percentage_poly : float\r\n    the integrated probability in a specific FOV (%)\r\n\r\n    airmass : float\r\n    the airmass of the FOV center\r\n\r\n    contour_ipix.out: list\r\n    the table that contained the pixels confined in a given probability percentage\r\n\r\n    ra_max : float\r\n    right ascention of the highest probability pixel\r\n\r\n    dec_max : float\r\n    declination of the highest probability pixel\r\n\r\n    instrument_FOV.vot : VOTABLE\r\n    Instrument Footprint Editor from http://aladin.u-strasbg.fr/footprint_editor/\r\n\r\n    N/S/E/W/R/Q : str\r\n    N/S/E/W: a set of command line to add contiguous FOVs in North/South/East/West  (N/S/E/W) directions;\r\n    R: to insert a new FOV center RA[deg], DEC[deg] to begin a new sequence in N/S/E/W directions;\r\n    Q: quit\r\n    \r\n**SUMMARY OF DEPENDENCIES**\r\n\r\n    from astropy.vo.samp import SAMPIntegratedClient\r\n    import urlparse\r\n    import os.path\r\n    from astropy.io.votable import parse\r\n    from math import sin, cos, acos, degrees, radians\r\n    import healpy\r\n    import numpy\r\n    import time                                                                   \r\n    import sys \r\n\r\n**Script functions**\r\n\r\n    import aladinSAMP\r\n    import print_area_prob \r\n    import table_ipix_percentage \r\n    import highest_probability_pixel \r\n    import instrument_FOV \r\n    import airmass \r\n    import gw_sequence\r\n    import progress_bar\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}